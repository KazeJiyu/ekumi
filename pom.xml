<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>fr.kazejiyu.ekumi</groupId>
	<artifactId>fr.kazejiyu.ekumi.root</artifactId>
	<version>0.1.0</version>
	<packaging>pom</packaging>
	
	<name>EKumi</name>
	<description>Workflow management system for Eclipse IDE</description>

	<modules>
		<module>bundles</module>
		<module>features</module>
		<module>releng</module>
        <module>tests</module>
	</modules>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<properties>
		<acceleo-version>3.3.0</acceleo-version>
		<tycho-version>1.2.0</tycho-version>
		<jacoco-version>0.8.1</jacoco-version>

        <!-- Always refer to the corresponding tests project (if it exists) otherwise 
        Sonarqube won't be able to collect code coverage. For example, when analyzing 
        project foo it wouldn't find code coverage information if it doesn't use 
        foo.tests jacoco.exec. -->
        <sonar.jacoco.reportPaths>../../tests/${project.artifactId}.test/target/jacoco.exec</sonar.jacoco.reportPaths>
        
		<!-- Ignore :
				- generated source code,
				- Exceptions,
				- untestable activators
		-->
        <sonar.exclusions>**/src-gen/**/*.*,**/*Exception.java,**/Activator.java,**/EKumiPlugin.java</sonar.exclusions>
	</properties>

	<!-- COMMANDS:	
		* Change project's version:
			mvn org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=major.minor.bug
	-->

	<build>
		<plugins>
			<plugin>
				<!-- Activate Tycho, along as its extension Tycho's pomless extension 
					is activated in .mvn folder -->
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<!-- Activate EKumi's target platform -->
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<target>
						<artifact>
							<groupId>fr.kazejiyu.ekumi</groupId>
							<artifactId>fr.kazejiyu.ekumi.target</artifactId>
							<version>0.1.0</version>
						</artifact>
					</target>
					<environments>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<!-- Establish code coverage. Used by https://codecov.io/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
					<instrumentation>
						<excludes>
							<exclude>fr/kazejiyu/ekumi/core/exceptions/**/*.class</exclude>
							<exclude>fr/kazejiyu/ekumi/core/languages/exceptions/**/*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-compiler-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<!-- Ask Tycho to auto-generate <plugin-name>.source plugins -->
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-source-plugin</artifactId>
					<version>${tycho-version}</version>
					<executions>
						<execution>
							<id>attach-source</id>
							<phase>process-classes</phase>
							<goals>
								<goal>plugin-source</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.1</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
